name: ci

on: [push]

env:
  SERVER_IMAGE_TAG: docker.pkg.github.com/${{ github.repository }}/server:${{ github.sha }}
  ES_IMAGE_TAG: docker.pkg.github.com/${{ github.repository }}/es:${{ github.sha }}
  CLIENT_IMAGE_TAG: docker.pkg.github.com/${{ github.repository }}/client:${{ github.sha }}
  DOC_IMAGE_TAG: docker.pkg.github.com/${{ github.repository }}/doc:${{ github.sha }}

jobs:
  server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: install dcdy
        run: |
          mkdir -p ~/.local/bin
          curl -sSf https://raw.githubusercontent.com/kgtkr/dcdy/master/install.sh | sh
          echo ::add-path::$HOME/.local/bin
      - name: build
        run: DCDY_MODE=test dcdy build
      - name: lint
        run: DCDY_MODE=test dcdy run --rm server npx lerna run lint --scope @anontown/server --stream
      - name: test
        run: DCDY_MODE=test dcdy run --rm server npx lerna run test:io --scope @anontown/server --stream
  client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: install dcdy
        run: |
          mkdir -p ~/.local/bin
          curl -sSf https://raw.githubusercontent.com/kgtkr/dcdy/master/install.sh | sh
          echo ::add-path::$HOME/.local/bin
      - name: build
        run: DCDY_MODE=test dcdy build
      - name: lint
        run: DCDY_MODE=test dcdy run --rm client npx lerna run lint --scope @anontown/client
  docker-build-and-push:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop' || startsWith(github.ref, 'refs/heads/topic/')
    runs-on: ubuntu-latest
    needs: [server, client]
    steps:
      - uses: actions/checkout@v1
      - name: login
        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p $PERSONAL_TOKEN
        env:
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      - name: build
        run: |
          docker build -t $SERVER_IMAGE_TAG server
          docker build -t $ES_IMAGE_TAG es
          docker build -t $CLIENT_IMAGE_TAG client
          docker build -t $DOC_IMAGE_TAG doc
      - name: push
        run: |
          docker push $SERVER_IMAGE_TAG
          docker push $ES_IMAGE_TAG
          docker push $CLIENT_IMAGE_TAG
          docker push $DOC_IMAGE_TAG
  release-commit:
    if: github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    needs: [docker-build-and-push]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: "10.x"
      - name: build
        run: |
          mkdir release
          DCDY_MODE=prod DCDY_SERVER_IMAGE=$SERVER_IMAGE_TAG DCDY_ES_IMAGE=$ES_IMAGE_TAG DCDY_CLIENT_IMAGE=$CLIENT_IMAGE_TAG DCDY_DOC_IMAGE=$DOC_IMAGE_TAG ./docker-compose.dy > release/docker-compose.yml
          cp -R release-static/ release
          cp .env.sample release
      - name: deploy
        uses: peaceiris/actions-gh-pages@v2.4.0
        env:
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          PUBLISH_BRANCH: release
          PUBLISH_DIR: ./release
